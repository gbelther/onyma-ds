var i=Object.defineProperty;var n=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.b59c9c40.js";import{c as e,A as c,M as d}from"./Props.b11d3498.js";import"./jsx-runtime.5bd36419.js";import"./iframe.54c9c6d3.js";import{f as l}from"./index.6c33aebe.js";import{G as u}from"./index.25cf8b13.js";import"./string.14e542fd.js";import"./index.31681f74.js";import"./es.map.constructor.7f947440.js";import"./es.number.to-fixed.07933eee.js";function p(){return p=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(o[s]=a[s])}return o},p.apply(this,arguments)}n(p,"_extends");const y={},f="wrapper";function m({components:o,...t}){return e(f,p({},y,t,{components:o,mdxType:"MDXLayout"}),e(d,{title:"Tokens/Fonts",mdxType:"Meta"}),e("h1",null,"Fonts"),e(u,{tokens:l,mdxType:"GeneralTokensGrid"}))}n(m,"MDXContent");m.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Fonts",includeStories:["__page"]},g={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>e(c,{mdxStoryNameToKey:g,mdxComponentAnnotations:r},e(m,null))};const j=["__page"];export{j as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=fonts.stories.94820280.js.map
